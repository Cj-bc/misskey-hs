[[file:README.org][English]]

--------------

* misskey-hs
[[https://github.com/misskey-dev/misskey][misskey-dev/misskey]] のAPIのHaskellライブラリ

* 使用方法
** CLIツールとして
*** Configを準備する
Configファイルを以下の形式で作成し、 =~/.config/misskey-hs/config.yaml= に配置してください。

#+begin_src yaml
token: <your_token>
instance_url: <your_instance_url>
#+end_src

例) Tokenが =MYTOKENHERE= で、所属しているインスタンスが =misskey.io= の場合

#+begin_src yaml
token: MYTOKENHERE
instance_url: misskey.io
#+end_src

*** ツールの使い方
=stack run --= で、各種APIを呼び出すコマンドを使うことができます。
=optparse-applicative= を使っているので、 =stack run -- --help= でヘルプが出ます。
サブコマンドで使いたいAPIを指定、各APIのRequestとして渡す値はオプションで指定します。

*** Usage sample
#+begin_src sh
$ stack run -- users/show --username cj_bc_sd
[User {_user_id = ...}]
#+end_src

#+begin_example
$ stack run -- --help
Usage: misskey-hs-exe COMMAND
  call Misskey API

Available options:
  -h,--help                Show this help text

Available commands:
  users/show               call users/show API
  users/notes              call users/notes API
  users/search             call users/search API
  users                    call users API
#+end_example

** ライブラリとして
このライブラリは以下のモジュールを提供します:

| module                            | 説明                                         |
|-----------------------------------+----------------------------------------------|
| =Web.Misskey.Type=                | ライブラリで共通して使う方が定義されています |
| =Web.Misskey.Api.Users.Show=      | =users/show= 用のAPIRequestと関数            |
| =Web.Misskey.Api.Users.Search=    | =users/search= 用のAPIRequestと関数          |
| =Web.Misskey.Api.Users.Notes=     | =users/Notes= 用のAPIRequestと関数           |
| =Web.Misskey.Api.Users.Users=     | =users= 用のAPIRequestと関数                 |
| =Web.Misskey.Api.Users.Following= | =users/following= 用のAPIRequestと関数       |
| =Web.Misskey.Api.Users.Followers= | =users/followers= 用のAPIRequestと関数       |
| =Web.Misskey.Api.Notes.Create=    | =notes/create= 用のAPIRequestと関数          |
| =Web.Misskey.Api.Notes.Timeline=  | =notes/timeline= 用のAPIRequestと関数        |

*** Basic usage
APIを呼び出す関数は =Web.Misskey.Api.*= にあります。
呼びたいAPIに対応する関数(例えば =users/show= なら =usersShow=)に、
各モジュールで定義されている =APIRequest= 型の値を与え、
=MisskeyEnv= とともに =runMisskey= を呼び出してください。

例. =users/show=
APIリクエストを筆者(=cj_bc_sd@virtual-kaf.fun=)について飛ばして結果を出力する

#+begin_src haskell :compile yes
  import Web.Misskey.Api (call, _UserName)
  import Control.Lens (re, (^.))
  import Web.Misskey.Type (MisskeyEnv(..))
  import RIO (runRIO)

  main = do
      let env = MisskeyEnv ""                       -- Misskey token.今回は必要ないので空文字列にします。
                           "https://misskey.io"     -- APIリクエストを飛ばすドメイン
          req = ("cj_bc_sd", Nothing)^.re _UserName -- '/api/users/show' エンドポイントへのリクエストを作成します

      -- Post API Request and get result
      usr <- runRIO env $ call req
      print usr
#+end_src

詳細は[[https://misskey-hub.net/docs/api/endpoints.html][misskey-hubのapi document]](少し情報が欠けている模様)とHaddockを確認してください。
